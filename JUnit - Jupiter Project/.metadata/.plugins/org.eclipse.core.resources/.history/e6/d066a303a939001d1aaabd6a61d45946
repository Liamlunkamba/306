package junit.test;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class PasswordComply {
	
	private final String  passwordString;
	private final int minPasswordLength = 8;
	private final int maxPasswordLength = 12;
	
	static final String DB_URL = "jdbc:mysql://localhost/TUTORIALSPOINT";
	static final String USER = "guest";
	static final String PASS = "guest123";
	static final String QUERY = "{call getEmpName (?, ?)}";
	
	PasswordComply (String verifyPassword) {
		passwordString = verifyPassword;		
	}

	
	private boolean verifyPasswordLength() {
		
		if(!passwordString.isEmpty()) {		
			if(passwordString.length() >= minPasswordLength && passwordString.length() <= maxPasswordLength) {
				return true;
				}	
		}
		return false;
	}
	
	private boolean verifyAplhaNumeric() {
		
		return true;		
	}
	
	private boolean hasAllowedspecailCharacters() {
		
		return true;		
	}
	
	private boolean doesNotAlreadyExist() {		
		
		try(Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
		         CallableStatement stmt = conn.prepareCall(QUERY);
		      ) {		      
		         // Bind values into the parameters.
		         stmt.setInt(1, 1);  // This would set ID
		         // Because second parameter is OUT so register it
		         stmt.registerOutParameter(2, java.sql.Types.VARCHAR);
		         //Use execute method to run stored procedure.
		         System.out.println("Executing stored procedure..." );
		         stmt.execute();
		         //Retrieve employee name with getXXX method
		         String empName = stmt.getString(2);
		         System.out.println("Emp Name with ID: 1 is " + empName);
		      } catch (SQLException e) {
		         e.printStackTrace();
		      } 
		
		return true;		
	}
	
	private boolean hasNoSpecailCharacters() {
		
		return true;		
	}
	
	public boolean doesPasswordComply() {
		
		return verifyPasswordLength() && verifyAplhaNumeric() && hasAllowedspecailCharacters() && doesNotAlreadyExist() && hasNoSpecailCharacters();		
	}
}
